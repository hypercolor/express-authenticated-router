{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./index.ts","webpack:///./src/AuthenticatedRouter.ts","webpack:///external \"express\""],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\nexport { AuthenticatedRouter, AuthenticatedRoute } from \"./src/AuthenticatedRouter\";\n","import * as express from 'express'\nimport { IRoute, RequestHandler, Router } from 'express'\n\ntype IControllerType = new (req: express.Request, res: express.Response, next: express.NextFunction) => any\n\nexport interface IAuthenticatedRouterOptions {\n  middleware?: Array<RequestHandler>\n  controllerBuilder?(controller: IControllerType): RequestHandler\n}\n\nexport class AuthenticatedRoute {\n  private route: IRoute\n  private myMiddleware: Array<RequestHandler> = []\n\n  constructor(routePrefix: string, router: express.Router, private opts: IAuthenticatedRouterOptions) {\n    this.route = router.route(routePrefix)\n  }\n\n  public use(middleware: RequestHandler) {\n    this.myMiddleware.push(middleware)\n    return this\n  }\n\n  public get(controller: IControllerType | RequestHandler) {\n    return this.handleMethod('get', controller)\n  }\n\n  public post(controller: IControllerType | RequestHandler) {\n    return this.handleMethod('post', controller)\n  }\n\n  public put(controller: IControllerType | RequestHandler) {\n    return this.handleMethod('put', controller)\n  }\n\n  public patch(controller: IControllerType | RequestHandler) {\n    return this.handleMethod('patch', controller)\n  }\n\n  public delete(controller: IControllerType | RequestHandler) {\n    return this.handleMethod('delete', controller)\n  }\n\n  public all(controller: IControllerType | RequestHandler) {\n    return this.handleMethod('all', controller)\n  }\n\n  public options(controller: IControllerType | RequestHandler) {\n    return this.handleMethod('options', controller)\n  }\n\n  public head(controller: IControllerType | RequestHandler) {\n    return this.handleMethod('head', controller)\n  }\n\n  private handleMethod(name: string, handler: IControllerType | RequestHandler) {\n    if (this.opts.controllerBuilder) {\n      // handler MUST be a Controller type\n      handler = this.opts.controllerBuilder(handler as IControllerType)\n    }\n    // handler = this.opts.controllerGenerator ? this.opts.controllerGenerator(handler) : handler\n    this.route[name](...this.buildMiddlewareArray(), handler)\n    return this\n  }\n\n  private buildMiddlewareArray() {\n    let handlers: Array<any> = []\n    if (this.opts.middleware) {\n      handlers = handlers.concat(this.opts.middleware)\n    }\n    return handlers.concat(this.myMiddleware)\n  }\n}\n\nexport class AuthenticatedRouter {\n  public router: Router = express.Router()\n\n  constructor(private readonly options?: IAuthenticatedRouterOptions) {\n    this.options = options || {}\n  }\n\n  public static build(options: IAuthenticatedRouterOptions, builder: (router: AuthenticatedRouter) => void) {\n    const router = new AuthenticatedRouter();\n    builder(router);\n    return router.router;\n  }\n\n  public route(route: string) {\n    return new AuthenticatedRoute(route, this.router, this.options!)\n  }\n}\n","module.exports = require(\"express\");"],"sourceRoot":""}